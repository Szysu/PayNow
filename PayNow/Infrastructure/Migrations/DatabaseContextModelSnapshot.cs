// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using PayNow.Infrastructure;

#nullable disable

namespace PayNow.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Customer", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Maintenance", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ScooterId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ScooterId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Rental", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<Point>("FromLocation")
                        .IsRequired()
                        .HasColumnType("POINT");

                    b.Property<int>("ScooterId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<Point>("ToLocation")
                        .IsRequired()
                        .HasColumnType("POINT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ScooterId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Scooter", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ProductionDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Scooters");
                });

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Maintenance", b =>
                {
                    b.HasOne("PayNow.Infrastructure.Entities.Scooter", "Scooter")
                        .WithMany("Maintenances")
                        .HasForeignKey("ScooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scooter");
                });

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Rental", b =>
                {
                    b.HasOne("PayNow.Infrastructure.Entities.Customer", "Customer")
                        .WithMany("Rentals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayNow.Infrastructure.Entities.Scooter", "Scooter")
                        .WithMany("Rentals")
                        .HasForeignKey("ScooterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Scooter");
                });

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Customer", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("PayNow.Infrastructure.Entities.Scooter", b =>
                {
                    b.Navigation("Maintenances");

                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
